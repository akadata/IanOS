<<NAVSTART>>
	<<NULL>>
	<<CONT>>
	<<NEXT bootsector.html Boot Sector>>
<<NAVEND>>
<<T Boot Process>><<H1 Overview of Boot Process>>
<<HR>>To get to Long Mode we need to follow the sequence:<br>  <ul>    <li>Load code into memory</li>    <li>Relocate code and data to the appropriate locations</li>    <li>Set up a Global Descriptor Table</li>    <li>Switch to Protected Mode</li>    <li>Set up an Interrupt Descriptor Table</li>    <li>Set up some Page Descriptor Tables</li>    <li>Enable Long Mode</li>    <li>Enable Paging</li>  </ul>Note the last three steps - unlike Protected Mode, if you want to use Long Mode then you must use Paging; even after you enable Long Mode it doesn't take effect until you also enable Paging. In many ways that's the most difficult part of getting the cpu working as a 64-bit processor.<<PAR>>
The code covering this process can be found in the files:
<<PAR>><<IN <<F boot.asm>> >><<IN <<F startup.s>> >><<IN <<F hwsetup.s>> >>
<<IN <<F hwhelp.s>> >><<IN <<F mem32.c>> >><<IN+ <<F ptab32.c>> >>
The code in these files runs in 16-bit or 32-bit mode and is concerned with setting the system up to transfer to 64-bit mode. The final instruction in <<S startup.s>> is a jump to the start of the 64-bit code in <<F os.s>>.<<HR>>
<<NAVSTART>>
	<<NULL>>
	<<CONT>>
	<<NEXT bootsector.html Boot Sector>>
<<NAVEND>>